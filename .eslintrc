{
  "parserOptions": {
    "ecmaVersion": 8,
    "sourceType": "module"
  },
  "env": {
    "browser": false,
    "node": true,
    "mocha": true,
    "es6": true
  },
  "globals": {
    "Promise": false
  },
  "extends": [
    "plugin:prettier/recommended",
    "plugin:security/recommended"
  ],
  "plugins": [
    "mocha",
    "promise"
  ],
  "rules": {
    // do not put style rules in here;
    //   we use eslint only to catch possible errors
    "array-callback-return": "error",
    "consistent-return": "error",
    "eqeqeq": "error",
    "guard-for-in": "error",
    "mocha/handle-done-callback": "error",
    "mocha/no-exclusive-tests": "error",
    "mocha/no-identical-title": "error",
    "mocha/no-nested-tests": "error",
    "promise/param-names": "error",
    "promise/always-return": "error",
    "promise/catch-or-return": "error",
    "no-var": "error",
    "no-eval": "error",
    "no-shadow-restricted-names": "error",
    "no-template-curly-in-string": "error",
    "no-unused-vars": ["error", {"varsIgnorePattern": "^_.*$", "args": "none"} ],
    "prefer-const": "error",

    "mocha/no-pending-tests": "off",
    "mocha/no-skipped-tests": "off",
    "mocha/no-synchronous-tests": "off",

    "security/detect-unsafe-regex": "error",
    "security/detect-buffer-noassert": "error",
    "security/detect-disable-mustache-escape": "error",
    "security/detect-eval-with-expression": "error",
    "security/detect-no-csrf-before-method-override": "error",
    "security/detect-non-literal-fs-filename": "error",
    "security/detect-non-literal-regexp": "error",
    "security/detect-non-literal-require": "error",
    "security/detect-object-injection": "error",
    "security/detect-possible-timing-attacks": "error",
    "security/detect-pseudoRandomBytes": "error",
    "security/detect-child-process": "error"
  }
}
